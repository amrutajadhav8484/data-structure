Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.
Example 1:

Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]
Output: 8
Explanation: There are 8 negatives number in the matrix.
Example 2:

Input: grid = [[3,2],[1,0]]
Output: 0
******************************************************************************************************************************************************************************
class Solution(object):
    def countNegatives(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        count=0
        row=len(grid)-1
        cal=0
        
        n=len(grid[0])
        while(row>=0 and cal<n):
            if(grid[row][cal]<0):

                count=count+(n-cal)
                row-=1
            else:
                if(grid[row][cal]>=0):
                    cal+=1
        return count


        
